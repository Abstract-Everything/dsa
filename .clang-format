Language: Cpp
Standard: c++20

# Whitespace options
ColumnLimit: 100
LineEnding: LF
InsertNewlineAtEOF: true
UseTab: ForContinuationAndIndentation
TabWidth: 8
IndentWidth: 8

AccessModifierOffset: -7
ContinuationIndentWidth: 4
ConstructorInitializerIndentWidth: 4

CompactNamespaces: false

# Indentation
IndentAccessModifiers: false
IndentCaseBlocks: false
IndentCaseLabels: false
IndentExternBlock: NoIndent
IndentGotoLabels: true
IndentPPDirectives: BeforeHash
IndentRequiresClause: false
RequiresExpressionIndentation: OuterScope
IndentWrappedFunctionNames: false
LambdaBodyIndentation: Signature
NamespaceIndentation: None

# Single Spaces
SpaceAfterCStyleCast: true
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: false
SpaceAroundPointerQualifiers: Default
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: ControlStatements
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 1
SpacesInAngles: false
SpacesInCStyleCastParentheses: false
SpacesInConditionalStatement: false
SpacesInContainerLiterals: false
SpacesInLineCommentPrefix:
  Minimum: 1
  Maximum: 2
SpacesInParentheses: false
SpacesInSquareBrackets: false

# Alignment
AlignAfterOpenBracket: AlwaysBreak
AlignArrayOfStructures: Right
AlignConsecutiveAssignments: Consecutive
AlignConsecutiveBitFields: Consecutive
AlignConsecutiveDeclarations: Consecutive
AlignConsecutiveMacros: Consecutive
AlignEscapedNewlines: Left
AlignOperands: Align
AlignTrailingComments: false

# Formatting by newlines
AllowAllArgumentsOnNextLine: false
AllowAllParametersOfDeclarationOnNextLine: false
AllowShortBlocksOnASingleLine: Never
AllowShortCaseLabelsOnASingleLine: false
AllowShortEnumsOnASingleLine: false
AllowShortFunctionsOnASingleLine: false
AllowShortIfStatementsOnASingleLine: Never
AllowShortLambdasOnASingleLine: All
AllowShortLoopsOnASingleLine: false
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: true
AlwaysBreakTemplateDeclarations: Yes
BinPackArguments: false
BinPackParameters: false
BitFieldColonSpacing: Both
BreakBeforeBinaryOperators: NonAssignment
BreakBeforeBraces: Custom
BraceWrapping:
  AfterCaseLabel: true
  AfterClass: true
  AfterControlStatement: Always
  AfterEnum: true
  # Without this require clauses indentation takes more space than it needs to
  AfterFunction: false
  AfterNamespace: true
  AfterStruct: true
  AfterUnion: true
  AfterExternBlock: true
  BeforeCatch: true
  BeforeElse: true
  BeforeLambdaBody: false
  BeforeWhile: false
  IndentBraces: false
  SplitEmptyFunction: false
  SplitEmptyRecord: false
  SplitEmptyNamespace: false
BreakBeforeConceptDeclarations: true
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: BeforeComma
BreakInheritanceList: BeforeComma
BreakStringLiterals: true
ConstructorInitializerAllOnOneLineOrOnePerLine: true
DeriveLineEnding: false
EmptyLineBeforeAccessModifier: Always
ExperimentalAutoDetectBinPacking: false
InsertBraces: true
KeepEmptyLinesAtTheStartOfBlocks: false
MaxEmptyLinesToKeep: 1
PackConstructorInitializers: CurrentLine
RequiresClausePosition: OwnLine
SeparateDefinitionBlocks: Always

# Macros
StatementMacros: []
TypenameMacros: []
WhitespaceSensitiveMacros: []
AttributeMacros: []
ForEachMacros: []
StatementAttributeLikeMacros: []

# Includes
IncludeBlocks: Regroup
IncludeCategories: 
  - Regex: '<(gtest|gmock|catch).+>'
    Priority: 6
    SortPriority: 6
  - Regex: '<[[:alnum:]_]+>'
    Priority: 5
    SortPriority: 5
  - Regex: '<dsa/.*>'
    Priority: 3
    SortPriority: 3
  - Regex: '<imgui.*>'
    Priority: 4
    SortPriority: 4
  - Regex: '<.*/.*>'
    Priority: 4
    SortPriority: 4
  - Regex: '<[[:alnum:].]+>'
    Priority: 2
    SortPriority: 2
  - Regex: '".*"'
    Priority: 1
    SortPriority: 1
IncludeIsMainRegex: "$"
SortIncludes: true

# Penalty tweaking
PenaltyBreakAssignment: 0
PenaltyBreakBeforeFirstCallParameter: 0
PenaltyBreakComment: 0
PenaltyBreakFirstLessLess: 0
PenaltyBreakString: 0
PenaltyBreakTemplateDeclaration: 0
PenaltyExcessCharacter: 8
PenaltyIndentedWhitespace: 0
PenaltyReturnTypeOnItsOwnLine: 999

# Miscellaneous
IntegerLiteralSeparator:
  Decimal: 3
  Binary: 4
  Hex: 4
DerivePointerAlignment: false
PointerAlignment: Right
ReferenceAlignment: Pointer
QualifierAlignment: Custom
QualifierOrder: ['inline', 'static', 'constexpr', 'type', 'const', 'volatile']

Cpp11BracedListStyle: true

ReflowComments: true
FixNamespaceComments: true
ShortNamespaceLines: 0

SortUsingDeclarations: true

InsertTrailingCommas: Wrapped

RawStringFormats:
  - Language: Cpp
    Delimiters:
      - 'CPP'
